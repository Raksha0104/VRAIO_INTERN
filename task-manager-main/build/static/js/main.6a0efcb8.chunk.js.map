{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","showForm","changeTextAndColor","Task","task","onDelete","onEdit","day","id","Tasks","tasks","map","AddTask","onSave","useState","setText","setDay","onSubmit","e","preventDefault","Swal","fire","icon","title","type","placeholder","value","onChange","target","App","loading","setloading","setTasks","showAddTask","setShowAddTask","useEffect","setTimeout","getTasks","JSON","parse","localStorage","getItem","role","uuidv4","newTask","setItem","stringify","length","deleteTask","filter","prompt","myData","x","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a0efcb8.chunk.js","sourcesContent":["const Button = ({ color, text, onClick }) => {\n    return <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\n}\n\nexport default Button\n","import React from 'react';\nimport Button from './Button';\nimport \"../index.css\";\n\nconst Header = ({ showForm, changeTextAndColor }) => {\n    return (\n        <header className=\"header\">\n            <h2 className=\"app-header\">Task Manager App</h2>\n            <Button onClick={showForm} color={changeTextAndColor ? 'red' : 'green'} text={changeTextAndColor ? 'Close' : 'Add'} />\n        </header>\n    )\n}\n\nexport default Header;\n","import { FaPencilAlt, FaTimes } from 'react-icons/fa';\nimport \"../index.css\"\n\nconst Task = ({ task, onDelete, onEdit }) => {\n    return (\n        <div>\n            <div className=\"task\">\n                <div>\n                    <p className=\"taskName\">\n                        <span className=\"textBold\">Task Name:</span> {task.text}\n                    </p>\n                    <p className=\"taskDate\"><span className=\"textBold\">Date of Completion:</span> {task.day}</p>\n                </div>\n                <div>\n                    <p><FaTimes onClick={() => onDelete(task.id)} className=\"delIcon\" /></p>\n                    <p><FaPencilAlt onClick={() => onEdit(task.id)} className=\"editIcon\" /></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task';\nimport \"../index.css\"\n\nconst Tasks = ({ tasks, onDelete, onEdit }) => {\n    return (\n        <>\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onEdit={onEdit} />))}\n        </>\n    )\n}\n\nexport default Tasks;\n","import { useState } from 'react';\nimport Swal from \"sweetalert2\";\n\nconst AddTask = ({ onSave }) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!text && !day) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Fill in your task and date or close the form!'\n            })\n        } else if (!text && day) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Fill in your task!'\n            })\n        } else if (text && !day) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Fill in your date!'\n            })\n        } else {\n            onSave({ text, day });\n        }\n\n        setText('');\n        setDay('');\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type=\"text\" placeholder=\"add task\" value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"add day & time\" value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","// Importing Components\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n// Importing React Hooks\nimport { useState, useEffect } from 'react';\n// Importing Packages\nimport { v4 as uuidv4 } from 'uuid';\nimport Swal from \"sweetalert2\";\n\nfunction App() {\n    // All States\n    const [loading, setloading] = useState(true); // Pre-loader before page renders\n    const [tasks, setTasks] = useState([]); // Task State\n    const [showAddTask, setShowAddTask] = useState(false); // To reveal add task form\n\n    // Pre-loader\n    useEffect(() => {\n        setTimeout(() => {\n            setloading(false);\n        }, 3500);\n    }, [])\n\n    // Fetching from Local Storage\n    const getTasks = JSON.parse(localStorage.getItem(\"taskAdded\"));\n\n    useEffect(() => {\n        if (getTasks == null) {\n            setTasks([])\n        } else {\n            setTasks(getTasks);\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    // Add Task\n    const addTask = (task) => {\n        const id = uuidv4();\n        const newTask = { id, ...task }\n\n        setTasks([...tasks, newTask]);\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Yay...',\n            text: 'You have successfully added a new task!'\n        })\n\n        localStorage.setItem(\"taskAdded\", JSON.stringify([...tasks, newTask]));\n    }\n\n    // Delete Task\n    const deleteTask = (id) => {\n        const deleteTask = tasks.filter((task) => task.id !== id);\n\n        setTasks(deleteTask);\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Oops...',\n            text: 'You have successfully deleted a task!'\n        })\n\n        localStorage.setItem(\"taskAdded\", JSON.stringify(deleteTask));\n    }\n\n    // Edit Task\n    const editTask = (id) => {\n\n        const text = prompt(\"Task Name\");\n        const day = prompt(\"Day and Time\");\n        let data = JSON.parse(localStorage.getItem('taskAdded'));\n\n        const myData = data.map(x => {\n            if (x.id === id) {\n                return {\n                    ...x,\n                    text: text,\n                    day: day,\n                    id: uuidv4()\n                }\n            }\n            return x;\n        })\n\n        Swal.fire({\n            icon: 'success',\n            title: 'Yay...',\n            text: 'You have successfully edited an existing task!'\n        })\n\n        localStorage.setItem(\"taskAdded\", JSON.stringify(myData));\n        window.location.reload();\n    }\n\n    return (\n        <>\n            {\n                loading\n                    ?\n                    <div className=\"spinnerContainer\">\n                        <div className=\"spinner-grow text-primary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-secondary\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-success\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-danger\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <div className=\"spinner-grow text-warning\" role=\"status\">\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"container\">\n                        {/* App Header that has open and App Name */}\n                        <Header showForm={() => setShowAddTask(!showAddTask)} changeTextAndColor={showAddTask} />\n\n                        {/* Revealing of Add Task Form */}\n                        {showAddTask && <AddTask onSave={addTask} />}\n\n                        {/* Task Counter */}\n                        <h3>Number of Tasks: {tasks.length}</h3>\n\n                        {/* Displaying of Tasks */}\n                        {\n                            tasks.length > 0\n                                ?\n                                (<Tasks tasks={tasks} onDelete={deleteTask} onEdit={editTask} />)\n                                :\n                                ('No Task Found!')\n                        }\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}